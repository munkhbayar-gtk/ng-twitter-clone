@use '@angular/material' as mat;
@include mat.core();

@function getColor($palette, $prop, $hue, $opacity) {
  $color : map-get($palette, $prop);
  @return mat.get-color-from-palette($color, $hue, $opacity);
}

@function getWarn($palette) {
  @return getColor($palette, warn, 500, null);
}

@function getAccent($palette) {
  @return getColor($palette, accent, 500, null);
}
@function getPrimary($palette) {
  @return getColor($palette, primary, 500, null);
}

@mixin color-list($color, $themeConfig) {
  $primary: getPrimary($color);
  $accent: getAccent($color);
  $warn: getWarn($color);

  //@debug 'primary:' $primary;
  //@debug "primary: #{$primary}";

  .#{map-get($themeConfig, 'name')}-color-list {

    --primary-color: #{$primary};
    --accent-color: #{$accent};
    --warn-color: #{$warn};

    @each $key, $value in $themeConfig {
      --#{$key}: #{$value};
    }
  }

  .primary-text-decoration {
    text-decoration-color: getPrimary($color);
  }
  .primaryColor {
    color: getPrimary($color) !important;
  }
  .primaryColorDisabled {
    color: getColor($color, primary, 500, 0.5) !important;
  }
  .primaryColorBgDisabled {
    background-color: getColor($color, primary, 500, 0.5) !important;
  }
  .primaryColorBg {
    background-color: getColor($color, primary, 500, 1) !important;
  }
  .primaryColorBgCustom {
    background-color: getColor($color, primary, 200, 1) !important;
  }
  .primaryColorBgHover:hover {
    background-color: getColor($color, primary, 500, 0.1) !important;
  }
  .primaryColorBgHover2:hover {
    background-color: getColor($color, primary, 500, 0.2) !important;
  }

  .primaryColorBorder {
    border: solid getPrimary($color);
  }
  .primaryColorBorderDeepFocus:focus-within {
    border: solid getPrimary($color);
    color: getPrimary($color);
  }
  .bgColorFg {
    color: map-get($themeConfig, 'bgColor') !important;
  }
  .bgColorBoder {
    border: solid map-get($themeConfig, 'bgColor');
  }
  .bg2 {
    background-color: map-get($themeConfig, 'bg2Color') !important;
  }
  .divider-border {
    border: solid map-get($themeConfig, 'dividerColor');
  }
  .divider-border-bottom {
    border-bottom: 1px solid map-get($themeConfig, 'dividerColor');
  }
}
$blue-primary : mat.define-palette(mat.$blue-palette);
$blue-accent : mat.define-palette(mat.$blue-palette);
$blue-warn: mat.define-palette(mat.$blue-palette);
$blue-color: (primary: $blue-primary, accent: $blue-accent, warn: $blue-warn);

$yellow-primary : mat.define-palette(mat.$yellow-palette);
$yellow-accent : mat.define-palette(mat.$yellow-palette);
$yellow-warn: mat.define-palette(mat.$yellow-palette);
$yellow-color: (primary: $yellow-primary, accent: $yellow-accent, warn: $yellow-warn);

$pink-primary : mat.define-palette(mat.$pink-palette);
$pink-accent : mat.define-palette(mat.$pink-palette);
$pink-warn: mat.define-palette(mat.$pink-palette);
$pink-color: (primary: $pink-primary, accent: $pink-accent, warn: $pink-warn);

$deep-purple-primary : mat.define-palette(mat.$deep-purple-palette);
$deep-purple-accent : mat.define-palette(mat.$deep-purple-palette);
$deep-purple-warn: mat.define-palette(mat.$deep-purple-palette);

$deep-purple-color: (primary: $deep-purple-primary, accent: $deep-purple-accent, warn: $deep-purple-warn);

$deep-orange-primary : mat.define-palette(mat.$deep-orange-palette);
$deep-orange-accent : mat.define-palette(mat.$deep-orange-palette);
$deep-orange-warn: mat.define-palette(mat.$deep-orange-palette);
$deep-orange-color: (primary: $deep-orange-primary, accent: $deep-orange-accent, warn: $deep-orange-warn);

$teal-primary : mat.define-palette(mat.$teal-palette);
$teal-accent : mat.define-palette(mat.$teal-palette);
$teal-warn: mat.define-palette(mat.$teal-palette);
$teal-color: (primary: $teal-primary, accent: $teal-accent, warn: $teal-warn);

$colors: (
  blue: $blue-color,
  yellow: $yellow-color,
  pink: $pink-color,
  deep-purple: $deep-purple-color,
  deep-orange: $deep-orange-color,
  teal: $teal-color
);
/* setting background, foreground colors to the themes*/
//https://eatmorecarrots.medium.com/changing-the-background-color-in-an-angular-material-theme-90d29f864759
@function modifyColor($theme, $dest, $color) {
// Replace the background in the color object's background palette.
  $theme-color: map-get($theme, color);
  $color-palette: map-get($theme-color, $dest);
  $color-palette: map-merge($color-palette, ($dest: $color));
  //$color-palette: map-merge($color-palette, (raised-button: $color));

  // Replace the background in the background palette.
  $dest-palette: map-get($theme, $dest);
  $dest-palette: map-merge($dest-palette, ($dest: $color));
  //$dest-palette: map-merge($dest-palette, (raised-button: $color));

  // Merge the changes into a new theme.
  $modified-theme-color: map-merge($theme-color, ($dest: $color-palette));
  $modified-theme: map-merge($theme, (color: $modified-theme-color));
  $modified-theme: map-merge($modified-theme, ($dest: $dest-palette));
  @return $modified-theme;
}
@function modifyColors($theme, $fg, $bg){

  $modifiedTheme : modifyColor($theme, background, $bg);
  $modifiedTheme : modifyColor($modifiedTheme, foreground, $fg);
  @return $modifiedTheme;
}

.thm-primary-blue {
  background-color: getColor($blue-color, primary, 500, 1) !important;
}

.thm-primary-yellow {
  background-color: getColor($yellow-color, primary, 500, 1) !important;
}

.thm-primary-pink {
  background-color: getColor($pink-color, primary, 500, 1) !important;
}

.thm-primary-deep-purple {
  background-color: getColor($deep-purple-color, primary, 500, 1) !important;
}

.thm-primary-deep-orange {
  background-color: getColor($deep-orange-color, primary, 500, 1) !important;
}

.thm-primary-teal {
  background-color: getColor($teal-color, primary, 500, 1) !important;
}
